const express = require('express');
const cors = require('cors');
const admin = require('firebase-admin');
const rateLimit = require('express-rate-limit');
require('dotenv').config();
const { MongoClient, ServerApiVersion } = require('mongodb');

const app = express();
const port = process.env.PORT || 3000;

// Initialize Firebase Admin (‡¶Ø‡¶¶‡¶ø ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶π‡¶Ø‡¶º)
// ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶π‡ßü‡ßá ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ .env ‡¶´‡¶æ‡¶á‡¶≤‡ßá FIREBASE_SERVICE_ACCOUNT_JSON ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá
try {
  const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT_JSON);
  admin.initializeApp({
    credential: admin.credential.cert(serviceAccount),
  });
} catch (error) {
  console.warn("Firebase Admin SDK ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§ FIREBASE_SERVICE_ACCOUNT_JSON ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®‡•§");
}


// Middleware
// Vercel-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø '/uploads' ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠ ‡¶ï‡¶∞‡¶æ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ‡•§ 
// ‡¶´‡¶æ‡¶á‡¶≤ ‡¶Ü‡¶™‡¶≤‡ßã‡¶°‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶â‡¶° ‡¶∏‡ßç‡¶ü‡ßã‡¶∞‡ßá‡¶ú (‡¶Ø‡ßá‡¶Æ‡¶® Cloudinary, AWS S3) ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã‡•§
// app.use('/uploads', express.static('uploads')); 
app.use(cors());
app.use(express.json());
app.use(rateLimit({
  windowMs: 15 * 60 * 1000, // 15 minutes
  max: 100,
}));

// MongoDB URI
const uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.temrfiu.mongodb.net/?retryWrites=true&w=majority`;

const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  },
});

async function run() {
  try {
    await client.connect();
    console.log('‚úÖ Connected to MongoDB successfully!');
    const db = client.db(process.env.DB_NAME);

    // ‡¶ï‡¶æ‡¶≤‡ßá‡¶ï‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶ñ‡¶æ‡¶®‡ßá Ï†ïÏùò ‡¶ï‡¶∞‡¶æ ‡¶Ø‡ßá‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá ‡¶Ø‡¶¶‡¶ø ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶π‡¶Ø‡¶º
    const usersCollection = db.collection('users');
    const projectsCollection = db.collection('projects'); // ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø 'projects' ‡¶ï‡¶æ‡¶≤‡ßá‡¶ï‡¶∂‡¶® ‡¶Ü‡¶õ‡ßá

    // Use routes (‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø‡¶§‡ßá)
    // ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶∞‡¶æ‡¶â‡¶ü ‡¶´‡¶æ‡¶á‡¶≤ require ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá db ‡¶¨‡¶æ ‡¶ï‡¶æ‡¶≤‡ßá‡¶ï‡¶∂‡¶® ‡¶™‡¶æ‡¶∏ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
    app.use('/api/users', require('./api/users')(usersCollection, admin));
    // app.use('/api/total-projects', require('./api/totalProjects')(projectsCollection)); // totalProjects ‡¶∞‡¶æ‡¶â‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶á ‡¶™‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞‡ßç‡¶®

  } catch (err) {
    console.error('‚ùå MongoDB connection error:', err.message);
  }
}

run().catch(console.dir);

// Root route
app.get('/', (req, res) => {
  res.send('Projukti Sheba Backend is running üöÄ');
});

app.listen(port, () => {
  console.log(`üöÄ Server running on port ${port}`);
});

// SIGTERM ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶ø‡¶Ç ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡¶≤‡ßá‡¶∏ ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂‡ßá ‡¶è‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶®‡ßá‡¶á
process.on('SIGTERM', async () => {
  console.log('SIGTERM received. Closing MongoDB connection...');
  await client.close();
  process.exit(0);
});

module.exports = app; // Vercel-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø app ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ö‡¶≠‡ßç‡¶Ø‡¶æ‡¶∏